name: Build and Publish

on: workflow_dispatch

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_release:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

{% raw %}
        runs-on: ${{ matrix.os }}
{% endraw %}

    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: nightly

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"

      - name: Install Linux Libraries
        run: sudo apt-get install -y g++ pkg-config libx11-dev libasound2-dev libudev-dev libwayland-dev libxkbcommon-dev
        if: runner.os == 'Linux'

      - name: Build
        run: cargo build --release --no-default-features --features non_web -Z unstable-options --out-dir build

      - name: remove build artifact
        run: rm build/*.rlib

      - uses: jdno/setup-butler@v1.3.0

      - name: Push to itch
      run: butler push build vivax/:{{ itch }}${% raw %}{{ runner.os }}
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_KEY }}
{% endraw %}

  web_build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1.0.6
        with:
          toolchain: nightly
          target: wasm32-unknown-unknown

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: "true"

      - name: Build
        run: cargo build --release --target wasm32-unknown-unknown --no-default-features --features web -Z unstable-options

      - uses: jetli/wasm-bindgen-action@v0.2.0

      - name: package
        run: wasm-bindgen --no-typescript --out-dir ./out/ --target web ./target/wasm32-unknown-unknown/release/Unamed_JumpMan.wasm

      - name: create index.html
        run: echo "<html><script type='module'>import init from './{{crate_name}}.js';init();</script></html>" > ./out/index.html

      - uses: jdno/setup-butler@v1.3.0

      - name: Push to itch
        run: butler push out vivax/{{ itch }}:web
        env:
{% raw %}
          BUTLER_API_KEY: ${{ secrets.BUTLER_KEY }}
{% endraw %}
